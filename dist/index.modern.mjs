import e from"isomorphic-unfetch";function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},t.apply(this,arguments)}class r{constructor(e){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey=e.apiKey,this.baseUrl=e.baseUrl||"https://api.ng.termii.com"}request(r,s){const i=`${this.baseUrl}${r}`,n=t({},s);return e(i,n).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)})}}const s="api/sender-id",i="api/sms/send";class n extends r{}var o;o=n,[class extends r{fetchSenderID(){return this.request(`/${s}?api_key=${this.apiKey}`)}requestSenderID(e){return this.request(`/${s}/request`,{method:"POST",body:JSON.stringify(t({api_key:this.apiKey},e))})}},class extends r{sendMessage(e){return this.request(`/${i}`,{method:"POST",body:JSON.stringify(t({api_key:this.apiKey},e))})}sendBulkMessage(e){return this.request(`/${i}/bulk`,{method:"POST",body:JSON.stringify(t({api_key:this.apiKey},e))})}}].forEach(e=>{Object.getOwnPropertyNames(e.prototype).forEach(t=>{Object.defineProperty(o.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t))})});export{n as default};
